[
    {
        "Category": "Entra ID Tenant Configuration",
        "Description": "Tenant-level configuration of Entra ID",
        "CollectedBy": "Maester",
        "ExpandValue": "False",
        "TargetTable": "",
        "ControlArea": [
            {
                "ControlName": "Default Authorization Settings",
                "ControlId": "EIDSCA.AP",
                "Description": "Manages authorization settings in Azure AD",
                "Discovery": "",
                "GraphEndpoint": "authorizationPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authorizationPolicy",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authorizationPolicy",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/authorizationpolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "allowedToUseSSPR",
                        "DisplayName": "Enabled Self service password reset for administrators",
                        "CheckId": "EIDSCA.AP01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowedToUseSSPR",
                        "DefaultValue": "true",
                        "RecommendedValue": "false",
                        "Recommendation": "Administrators with sensitive roles should use phishing-resistant authentication methods only and therefore not able to reset their password using SSPR.",
                        "Severity": "Informational",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Indicates whether administrators of the tenant can use the Self-Service Password Reset (SSPR). The policy applies to some critical critical roles in Microsoft Entra ID.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "blockMsolPowerShell",
                        "DisplayName": "Blocked MSOnline PowerShell access",
                        "CheckId": "EIDSCA.AP02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "blockMsolPowerShell",
                        "DefaultValue": "false",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [
                            "T1556"
                        ],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Specifies whether the user-based access to the legacy service endpoint used by MSOL PowerShell is blocked or not. This does not affect Azure AD Connect or Microsoft Graph.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "enabledPreviewFeatures",
                        "DisplayName": "Enabled ",
                        "CheckId": "EIDSCA.AP03",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "enabledPreviewFeatures",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Manages access of (private) preview features in tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowInvitesFrom",
                        "DisplayName": "Guest invite restrictions",
                        "CheckId": "EIDSCA.AP04",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowInvitesFrom",
                        "DefaultValue": "everyone",
                        "RecommendedValue": "@('adminsAndGuestInviters','none')",
                        "Recommendation": "CISA SCuBA 2.18: Only users with the Guest Inviter role SHOULD be able to invite guest users",
                        "Severity": "Medium",
                        "MitreTactic": [
                            "TA0003 - Persistence"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/CompanyRelationshipsMenuBlade/~/Settings",
                        "Description": "Manages controls who can invite guests to your directory to collaborate on resources secured by your Azure AD, such as SharePoint sites or Azure resources.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToSignUpEmailBasedSubscriptions",
                        "DisplayName": "Sign-up for email based subscription",
                        "CheckId": "EIDSCA.AP05",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowedToSignUpEmailBasedSubscriptions",
                        "DefaultValue": "true",
                        "RecommendedValue": "false",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Indicates whether users can sign up for email based subscriptions.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowEmailVerifiedUsersToJoinOrganization",
                        "DisplayName": "User can join the tenant by email validation",
                        "CheckId": "EIDSCA.AP06",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowEmailVerifiedUsersToJoinOrganization",
                        "DefaultValue": "true",
                        "RecommendedValue": "false",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/enterprise-users/directory-self-service-signup",
                        "Severity": "Medium",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Controls whether users can join the tenant by email validation. To join, the user must have an email address in a domain which matches one of the verified domains in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "guestUserRoleId",
                        "DisplayName": "Guest user access",
                        "CheckId": "EIDSCA.AP07",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "guestUserRoleId",
                        "DefaultValue": "10dae51f-b6af-4016-8d66-8c2a99b929b3",
                        "RecommendedValue": "2af84b1e-32c8-42b7-82bc-daa82404023b",
                        "Recommendation": "CISA SCuBA 2.18: Guest users SHOULD have limited access to Azure AD directory objects.",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0043 - Reconnaissance"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AllowlistPolicyBlade",
                        "Description": "Represents role templateId for the role that should be granted to guest user.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "permissionGrantPolicyIdsAssignedToDefaultUserRole",
                        "DisplayName": "User consent policy assigned for applications",
                        "CheckId": "EIDSCA.AP08",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "permissionGrantPolicyIdsAssignedToDefaultUserRole | Sort-Object -Descending | select-object -first 1",
                        "DefaultValue": "ManagePermissionGrantsForSelf.microsoft-user-default-legacy",
                        "RecommendedValue": "ManagePermissionGrantsForSelf.microsoft-user-default-low",
                        "Recommendation": "Microsoft recommends to allow to user consent for apps from verified publisher for selected permissions. CISA SCuBA 2.7 defines that all Non-Admin Users SHALL Be Prevented From Providing Consent To Third-Party Applications.",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078",
                            "T1550",
                            "T1528"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/UserSettings",
                        "Description": "Defines if user consent to apps is allowed, and if it is, which app consent policy (permissionGrantPolicy) governs the permissions.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowUserConsentForRiskyApps",
                        "DisplayName": "Risk-based step-up consent",
                        "CheckId": "EIDSCA.AP09",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowUserConsentForRiskyApps",
                        "DefaultValue": "false",
                        "RecommendedValue": "false",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/manage-apps/configure-risk-based-step-up-consent",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078",
                            "T1550",
                            "T1528"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018"
                        ],
                        "PortalDeepLink": "",
                        "Description": "Indicates whether user consent for risky apps is allowed. For example, consent requests for newly registered multi-tenant apps that are not publisher verified and require non-basic permissions are considered risky.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToCreateApps",
                        "DisplayName": "Default User Role Permissions - Allowed to create Apps",
                        "CheckId": "EIDSCA.AP10",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "defaultUserRolePermissions.allowedToCreateApps",
                        "DefaultValue": "true",
                        "RecommendedValue": "false",
                        "Recommendation": "CISA SCuBA 2.6: Only Administrators SHALL Be Allowed To Register Third-Party Applications",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078",
                            "T1550",
                            "T1528"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018",
                            "M1024",
                            "M1047"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/UserSettings",
                        "Description": "Controls if non-admin users may register custom-developed applications for use within this directory.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToCreateSecurityGroups",
                        "DisplayName": "Default User Role Permissions - Allowed to create Security Groups",
                        "CheckId": "EIDSCA.AP11",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "defaultUserRolePermissions.allowedToCreateSecurityGroups",
                        "DefaultValue": "true",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [
                            "TA0003 - Persistence"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/GroupsManagementMenuBlade/~/General",
                        "Description": "Defines default permission of user to create security groups in Azure portals, API or PowerShell. Global administrators and user administrators can still create security groups.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToCreateTenants",
                        "DisplayName": "Default User Role Permissions - Allowed to create Tenants",
                        "CheckId": "EIDSCA.AP12",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "defaultUserRolePermissions.allowedToCreateTenants",
                        "DefaultValue": "true",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [
                            "TA0010 - Exfiltration",
                            "TA0040 - Impact"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/UserSettings",
                        "Description": "Restricts the creation of Azure AD tenants to the global administrator or tenant creator roles. Anyone who creates a tenant will become the global administrator for that tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToReadBitlockerKeysForOwnedDevice",
                        "DisplayName": "Default User Role Permissions - Allowed to read BitLocker Keys for Owned Devices",
                        "CheckId": "EIDSCA.AP13",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "defaultUserRolePermissions.allowedToReadBitlockerKeysForOwnedDevice",
                        "DefaultValue": "true",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [
                            "TA0003 - Persistence"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Controls default access for members (end-user) to read BitLocker Keys of company-owned devices (device assigned to user).",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowedToReadOtherUsers",
                        "DisplayName": "Default User Role Permissions - Allowed to read other users",
                        "CheckId": "EIDSCA.AP14",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "defaultUserRolePermissions.allowedToReadOtherUsers",
                        "DefaultValue": "true",
                        "RecommendedValue": "true",
                        "Recommendation": "Restrict this default permissions for members have huge impact on collaboration features and user lookup.",
                        "Severity": "Informational",
                        "MitreTactic": [
                            "TA0043 - Reconnaissance"
                        ],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Prevents all non-admins from reading user information from the directory. This flag doesn't prevent reading user information in other Microsoft services like Exchange Online.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Default Settings - Consent Policy Settings",
                "ControlId": "EIDSCA.CP",
                "Description": "Define the consent configurations that can be used to customize the tenant-wide and object-specific restrictions and allowed behavior",
                "Discovery": "$SettingsApiAvailable = (Invoke-MtGraphRequest -RelativeUri 'settings' -ApiVersion beta).values.name",
                "GraphEndpoint": "settings",
                "GraphUri": "https://graph.microsoft.com/beta/settings",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/settings",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/directorysetting",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "EnableGroupSpecificConsent",
                        "DisplayName": "Group owner consent for apps accessing data",
                        "CheckId": "EIDSCA.CP01",
                        "SkipCondition": "$SettingsApiAvailable -notcontains 'EnableGroupSpecificConsent'",
                        "SkipReason": "Settings value is not available. This may be due to the change that this API is no longer available for recent created tenants.",
                        "CurrentValue": "values | where-object name -eq 'EnableGroupSpecificConsent' | select-object -expand value",
                        "DefaultValue": "True",
                        "RecommendedValue": "False",
                        "Recommendation": "CISA SCuBA 2.7: Non-Admin Users SHALL Be Prevented From Providing Consent To Third-Party Applications.",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018",
                            "M1047"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/UserSettings",
                        "Description": "Group and team owners can authorize applications, such as applications published by third-party vendors, to access your organization's data associated with a group. For example, a team owner in Microsoft Teams can allow an app to read all Teams messages in the team, or list the basic profile of a group's members.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "ConstrainGroupSpecificConsentToMembersOfGroupId",
                        "DisplayName": "Group owner consent for apps accessing data - Restricted to selected group owners",
                        "CheckId": "EIDSCA.CP02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'ConstrainGroupSpecificConsentToMembersOfGroupId' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018",
                            "M1047"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/UserSettings",
                        "Description": "Only selected group owners can allow applications to access data for the groups they own.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "BlockUserConsentForRiskyApps",
                        "DisplayName": "Block user consent for risky apps",
                        "CheckId": "EIDSCA.CP03",
                        "SkipCondition": "$SettingsApiAvailable -notcontains 'BlockUserConsentForRiskyApps'",
                        "SkipReason": "Settings value is not available. This may be due to the change that this API is no longer available for recent created tenants.",
                        "CurrentValue": "values | where-object name -eq 'BlockUserConsentForRiskyApps' | select-object -expand value",
                        "DefaultValue": "true",
                        "RecommendedValue": "true",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/manage-apps/configure-risk-based-step-up-consent",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018",
                            "M1047"
                        ],
                        "PortalDeepLink": "",
                        "Description": "Defines whether user consent will be blocked when a risky request is detected",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableAdminConsentRequests",
                        "DisplayName": "Users can request admin consent to apps they are unable to consent to",
                        "CheckId": "EIDSCA.CP04",
                        "SkipCondition": "$SettingsApiAvailable -notcontains 'EnableAdminConsentRequests'",
                        "SkipReason": "Settings value is not available. This may be due to the change that this API is no longer available for recent created tenants.",
                        "CurrentValue": "values | where-object name -eq 'EnableAdminConsentRequests' | select-object -expand value",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "CISA SCuBA 2.7: Non-Admin Users SHALL Be Prevented From Providing Consent To Third-Party Applications.",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0001 - Initial Access"
                        ],
                        "MitreTechnique": [
                            "T1566.002",
                            "T1078"
                        ],
                        "MitreMitigation": [
                            "M1017",
                            "M1018",
                            "M1047"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "If this option is set to enabled, then users request admin consent to any app that requires access to data they do not have the permission to grant. If this option is set to disabled, then users must contact their admin to request to consent in order to use the apps they need.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Default Settings - Password Rule Settings",
                "ControlId": "EIDSCA.PR",
                "Description": "Define the password protection and Smart Lockout configurations that can be used to customize the tenant-wide and object-specific restrictions and allowed behavior",
                "Discovery": "",
                "GraphEndpoint": "settings",
                "GraphUri": "https://graph.microsoft.com/beta/settings",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/settings",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/directorysetting",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "BannedPasswordCheckOnPremisesMode",
                        "DisplayName": "Password Protection - Mode",
                        "CheckId": "EIDSCA.PR01",
                        "SkipCondition": "$SettingsApiAvailable -notcontains 'BannedPasswordCheckOnPremisesMode'",
                        "SkipReason": "Settings value is not available. This may be due to the change that this API is no longer available for recent created tenants.",
                        "CurrentValue": "values | where-object name -eq 'BannedPasswordCheckOnPremisesMode' | select-object -expand value",
                        "DefaultValue": "Audit",
                        "RecommendedValue": "Enforce",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad-on-premises",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "If set to Enforce, users will be prevented from setting banned passwords and the attempt will be logged. If set to Audit, the attempt will only be logged.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableBannedPasswordCheckOnPremises",
                        "DisplayName": "Password Protection - Enable password protection on Windows Server Active Directory",
                        "CheckId": "EIDSCA.PR02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'EnableBannedPasswordCheckOnPremises' | select-object -expand value",
                        "DefaultValue": "False",
                        "RecommendedValue": "True",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/security/fundamentals/identity-management-best-practices#enable-password-management",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "If set to Yes, password protection is turned on for Active Directory domain controllers when the appropriate agent is installed.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableBannedPasswordCheck",
                        "DisplayName": "Enforce custom list",
                        "CheckId": "EIDSCA.PR03",
                        "SkipCondition": "$SettingsApiAvailable -notcontains 'EnableBannedPasswordCheck'",
                        "SkipReason": "Settings value is not available. This may be due to the change that this API is no longer available for recent created tenants.",
                        "CurrentValue": "values | where-object name -eq 'EnableBannedPasswordCheck' | select-object -expand value",
                        "DefaultValue": "True",
                        "RecommendedValue": "True",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad#global-banned-password-list",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "When enabled, the words in the list below are used in the banned password system to prevent easy-to-guess passwords.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "BannedPasswordList",
                        "DisplayName": "Password Protection - Custom banned password list",
                        "CheckId": "EIDSCA.PR04",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'BannedPasswordList' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad#custom-banned-password-list",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "A list of words, one per line, to prevent your users from using in their passwords. You should include words specific to your organization, such as your products, trademarks, industries, local cities and towns, and local sports teams. Your list can contain up to 1000 words. These are case insensitive, and common character substitutions (o for 0, etc) are automatically considered.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "LockoutDurationInSeconds",
                        "DisplayName": "Smart Lockout - Lockout duration in seconds",
                        "CheckId": "EIDSCA.PR05",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'LockoutDurationInSeconds' | select-object -expand value",
                        "DefaultValue": "60",
                        "RecommendedValue": ">=60",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-password-smart-lockout",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "The minimum length in seconds of each lockout. If an account locks repeatedly, this duration increases.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "LockoutThreshold",
                        "DisplayName": "Smart Lockout - Lockout threshold",
                        "CheckId": "EIDSCA.PR06",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'LockoutThreshold' | select-object -expand value",
                        "DefaultValue": "10",
                        "RecommendedValue": "10",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-password-smart-lockout",
                        "Severity": "High",
                        "MitreTactic": [
                            "TA0006 - Credential Access"
                        ],
                        "MitreTechnique": [
                            "T1110"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1027"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/PasswordProtection",
                        "Description": "How many failed sign-ins are allowed on an account before its first lockout. If the first sign-in after a lockout also fails, the account locks out again.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Default Settings - Classification and M365 Groups",
                "ControlId": "EIDSCA.ST",
                "Description": "Define group configurations that can be used to customize the tenant-wide and object-specific restrictions and allowed behavior",
                "Discovery": "",
                "GraphEndpoint": "settings",
                "GraphUri": "https://graph.microsoft.com/beta/settings",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/settings",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/directorysetting",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "NewUnifiedGroupWritebackDefault",
                        "DisplayName": "Default writeback setting for newly created Microsoft 365 groups",
                        "CheckId": "EIDSCA.ST01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'NewUnifiedGroupWritebackDefault' | select-object -expand value",
                        "DefaultValue": "true",
                        "RecommendedValue": "",
                        "Recommendation": "https://learn.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-modify-group-writeback#disable-automatic-writeback-of-new-microsoft-365-groups",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "If the original version of group write-back is already enabled and in use in your environment, all your Microsoft 365 groups have already been written back to Active Directory. Instead of disabling all Microsoft 365 groups, review any use of the previously written-back groups. Disable only those that are no longer needed in on-premises Active Directory.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableMIPLabels",
                        "DisplayName": "Microsoft Information Protection (MIP) Sensitivity labels to Microsoft 365 groups",
                        "CheckId": "EIDSCA.ST02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'EnableMIPLabels' | select-object -expand value",
                        "DefaultValue": "false",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Enables to apply published labels to groups",
                        "HowToFix": ""
                    },
                    {
                        "Name": "CustomBlockedWordsList",
                        "DisplayName": "M365 groups naming convention - Custom blocked words list",
                        "CheckId": "EIDSCA.ST03",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'CustomBlockedWordsList' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/GroupsManagementMenuBlade/~/NamingPolicy",
                        "Description": "Comma-separated string of phrases that users will not be permitted to use in group names or aliases.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableMSStandardBlockedWords",
                        "DisplayName": "M365 groups naming convention - Microsoft Standard List of blocked words (deprecated)",
                        "CheckId": "EIDSCA.ST04",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'EnableMSStandardBlockedWords' | select-object -expand value",
                        "DefaultValue": "false",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Deprecated. Do not use!",
                        "HowToFix": ""
                    },
                    {
                        "Name": "ClassificationDescriptions",
                        "DisplayName": "M365 groups naming convention - Classification descriptions",
                        "CheckId": "EIDSCA.ST05",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'ClassificationDescriptions' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "A comma-delimited list of classification descriptions. This setting does not apply when EnableMIPLabels == True. Character limit for property ClassificationDescriptions is 300, and commas can't be escaped.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "DefaultClassification",
                        "DisplayName": "M365 groups naming convention - Default classification",
                        "CheckId": "EIDSCA.ST06",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'DefaultClassification' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "The classification that is to be used as the default classification for a group if none was specified. This setting does not apply when EnableMIPLabels == True.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "PrefixSuffixNamingRequirement",
                        "DisplayName": "M365 groups naming convention - prefix/suffix naming requirement",
                        "CheckId": "EIDSCA.ST07",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'PrefixSuffixNamingRequirement' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/GroupsManagementMenuBlade/~/NamingPolicy",
                        "Description": "String of a maximum length of 64 characters that defines the naming convention configured for Microsoft 365 groups.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "AllowGuestsToBeGroupOwner",
                        "DisplayName": "M365 groups - Allow Guests to become Group Owner",
                        "CheckId": "EIDSCA.ST08",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'AllowGuestsToBeGroupOwner' | select-object -expand value",
                        "DefaultValue": "false",
                        "RecommendedValue": "false",
                        "Recommendation": "CISA SCuBA 2.18: Guest users SHOULD have limited access to Azure AD directory objects",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Indicating whether or not a guest user can be an owner of groups",
                        "HowToFix": ""
                    },
                    {
                        "Name": "AllowGuestsToAccessGroups",
                        "DisplayName": "M365 groups - Allow Guests to have access to groups content",
                        "CheckId": "EIDSCA.ST09",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'AllowGuestsToAccessGroups' | select-object -expand value",
                        "DefaultValue": "True",
                        "RecommendedValue": "True",
                        "Recommendation": "Manages if guest accounts can access resources through Microsoft 365 Group membership and could break collaboration if you disable it.",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Indicating whether or not a guest user can have access to Microsoft 365 groups content. This setting does not require an Azure Active Directory Premium P1 license.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "GuestUsageGuidelinesUrl",
                        "DisplayName": "M365 groups - Guest usage guidelines URL",
                        "CheckId": "EIDSCA.ST10",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'GuestUsageGuidelinesUrl' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "URL of a link to the guest usage guidelines which will be shown in external sharing e-mails. Link should be public available.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "EnableGroupCreation",
                        "DisplayName": "M365 groups - Enable Group creation for any members",
                        "CheckId": "EIDSCA.ST11",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'EnableGroupCreation' | select-object -expand value",
                        "DefaultValue": "True",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/GroupsManagementMenuBlade/~/General",
                        "Description": "The flag indicating whether Microsoft 365 group creation is allowed in the directory by non-admin users. This setting does not require an Azure Active Directory Premium P1 license.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "GroupCreationAllowedGroupId",
                        "DisplayName": "M365 groups - Allow group created for a specific security group",
                        "CheckId": "EIDSCA.ST12",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'GroupCreationAllowedGroupId' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "GUID of the security group for which the members are allowed to create Microsoft 365 groups even when EnableGroupCreation == false.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "AllowToAddGuests",
                        "DisplayName": "M365 groups - Allow to add Guests",
                        "CheckId": "EIDSCA.ST13",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'AllowToAddGuests' | select-object -expand value",
                        "DefaultValue": "True",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "A boolean indicating whether or not is allowed to add guests to this directory. This setting may be overridden and become read-only if EnableMIPLabels is set to True and a guest policy is associated with the sensitivity label assigned to the group. If the AllowToAddGuests setting is set to False at the organization level, any AllowToAddGuests setting at the group level is ignored. If you want to enable guest access for only a few groups, you must set AllowToAddGuests to be true at the organization level, and then selectively disable it for specific groups.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "ClassificationList",
                        "DisplayName": "M365 groups - Classification list",
                        "CheckId": "EIDSCA.ST14",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "values | where-object name -eq 'ClassificationList' | select-object -expand value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "A comma-delimited list of valid classification values that can be applied to Microsoft 365 groups. This setting does not apply when EnableMIPLabels == True.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Default Activity Timeout",
                "ControlId": "EIDSCA.DA",
                "Description": "Control the idle timeout for web sessions for applications that support activity-based timeout functionality",
                "Discovery": "",
                "GraphEndpoint": "activityBasedTimeoutPolicies",
                "GraphUri": "https://graph.microsoft.com/beta/policies/activityBasedTimeoutPolicies",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/activityBasedTimeoutPolicies",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/activitybasedtimeoutpolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "WebSessionIdleTimeout",
                        "DisplayName": "Enable directory level idle timeout",
                        "CheckId": "EIDSCA.DA01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "definition.ActivityBasedTimeoutPolicy.ApplicationPolicies.WebSessionIdleTimeout",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#settings",
                        "Description": "Inactivity timeout is being enforced by this setting. You will be signed out after the configured time of inactivity.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "External Identities",
                "ControlId": "EIDSCA.EX",
                "Description": "Controls whether external users can leave an Azure AD tenant via self-service controls",
                "Discovery": "",
                "GraphEndpoint": "externalIdentitiesPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/externalIdentitiesPolicy",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/externalIdentitiesPolicy",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/externalidentitiespolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "allowExternalIdentitiesToLeave",
                        "DisplayName": "External user leave settings",
                        "CheckId": "EIDSCA.EX01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowExternalIdentitiesToLeave",
                        "DefaultValue": "True",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/CompanyRelationshipsMenuBlade/~/Settings",
                        "Description": "Allow external users to remove themselves from your organization",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowDeletedIdentitiesDataRemoval",
                        "DisplayName": "Deleted Identities Data Removal",
                        "CheckId": "EIDSCA.EX02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "allowDeletedIdentitiesDataRemoval",
                        "DefaultValue": "False",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Microsoft Docs describes this setting as: Reserved for future use.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Feature Rollout (Enabled Previews)",
                "ControlId": "EIDSCA.FT",
                "Description": "Defines a rollout and pilot feature before enabling for entire organization",
                "Discovery": "",
                "GraphEndpoint": "featureRolloutPolicies",
                "GraphUri": "https://graph.microsoft.com/beta/policies/featureRolloutPolicies",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/featureRolloutPolicies",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/featurerolloutpolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "featureRolloutPolicy",
                        "DisplayName": "",
                        "CheckId": "EIDSCA.FT01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "value",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Policy helps tenant administrators to pilot features of Azure AD with a specific group before enabling features for entire organization",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - General Settings",
                "ControlId": "EIDSCA.AG",
                "Description": "The tenant-wide policy that controls which authentication methods are allowed in the tenant, authentication method registration requirements, and self-service password reset settings.",
                "Discovery": "$EnabledAuthMethods = (Get-MtAuthenticationMethodPolicyConfig -State Enabled).Id",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/authenticationmethodspolicy-get",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "policyMigrationState",
                        "DisplayName": "Manage migration",
                        "CheckId": "EIDSCA.AG01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "policyMigrationState",
                        "DefaultValue": "premigration",
                        "RecommendedValue": "migrationComplete",
                        "Recommendation": "On September 30th, 2025, the legacy multifactor authentication and self-service password reset policies will be deprecated and you'll manage all authentication methods here in the authentication methods policy. Use this control to manage your migration from the legacy policies to the new unified policy.",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AdminAuthMethods",
                        "Description": "The state of migration of the authentication methods policy from the legacy multifactor authentication and self-service password reset (SSPR) policies. In January 2024, the legacy multifactor authentication and self-service password reset policies will be deprecated and you'll manage all authentication methods here in the authentication methods policy. Use this control to manage your migration from the legacy policies to the new unified policy.",
                        "HowToFix": "[Microsoft Learn - How to manage authentication methodes](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-authentication-methods-manage#start-the-migration)"
                    },
                    {
                        "Name": "reportSuspiciousActivitySettingsState",
                        "DisplayName": "Report suspicious activity - State",
                        "CheckId": "EIDSCA.AG02",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "reportSuspiciousActivitySettings.state",
                        "DefaultValue": "default",
                        "RecommendedValue": "enabled",
                        "Recommendation": "Allows to integrate report of fraud attempt by users to identity protection: Users who report an MFA prompt as suspicious are set to High User Risk. Administrators can use risk-based policies to limit access for these users, or enable self-service password reset (SSPR) for users to remediate problems on their own.",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "Allows users to report suspicious activities if they receive an authentication request that they did not initiate. This control is available when using the Microsoft Authenticator app and voice calls. Reporting suspicious activity will set the user's risk to high. If the user is subject to risk-based Conditional Access policies, they may be blocked.",
                        "HowToFix": "[Microsoft Learn - Report suspicious activites](https://learn.microsoft.com/en-us/entra/identity/authentication/howto-mfa-mfasettings#report-suspicious-activity)"
                    },
                    {
                        "Name": "reportSuspiciousActivitySettingsIncluded",
                        "DisplayName": "Report suspicious activity - Included users/groups",
                        "CheckId": "EIDSCA.AG03",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "reportSuspiciousActivitySettings.includeTarget.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "all_users",
                        "Recommendation": "Apply this feature to all users.",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "Object Id or scope of users which will be included to report suspicious activities if they receive an authentication request that they did not initiate.",
                        "HowToFix": "[Microsoft Learn - Report suspicious activites](https://learn.microsoft.com/en-us/entra/identity/authentication/howto-mfa-mfasettings#report-suspicious-activity)"
                    },
                    {
                        "Name": "reportSuspiciousActivitySettingsReporting code",
                        "DisplayName": "Report suspicious activity - Reporting code",
                        "CheckId": "EIDSCA.AG04",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "reportSuspiciousActivitySettings.voiceReportingCode",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "Reporting code must be 0 - 9.",
                        "HowToFix": "[Microsoft Learn - Report suspicious activites](https://learn.microsoft.com/en-us/entra/identity/authentication/howto-mfa-mfasettings#report-suspicious-activity)"
                    },
                    {
                        "Name": "systemCredentialPreferencesState",
                        "DisplayName": "System-preferred multifactor authentication - State",
                        "CheckId": "EIDSCA.AG05",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "systemCredentialPreferences.state",
                        "DefaultValue": "default",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "This setting designates whether the most secure multifactor authentication method is presented to users.",
                        "HowToFix": "[Microsoft Learn - System-preferred MFA](https://learn.microsoft.com/en-us/entra/identity/authentication/concept-system-preferred-multifactor-authentication#enable-system-preferred-mfa-in-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "systemCredentialPreferencesStateIncluded",
                        "DisplayName": "System-preferred multifactor authentication - Included users/groups",
                        "CheckId": "EIDSCA.AG06",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "systemCredentialPreferences.includeTargets.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "N/A",
                        "HowToFix": "[Microsoft Learn - System-preferred MFA](https://learn.microsoft.com/en-us/entra/identity/authentication/concept-system-preferred-multifactor-authentication#enable-system-preferred-mfa-in-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "systemCredentialPreferencesStateExcluded",
                        "DisplayName": "System-preferred multifactor authentication - Excluded users/groups",
                        "CheckId": "EIDSCA.AG07",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "systemCredentialPreferences.excludeTargets.id",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AuthMethodsSettings",
                        "Description": "N/A",
                        "HowToFix": "[Microsoft Learn - System-preferred MFA](https://learn.microsoft.com/en-us/entra/identity/authentication/concept-system-preferred-multifactor-authentication#enable-system-preferred-mfa-in-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "authenticationMethodsRegistrationCampaignState",
                        "DisplayName": "Registration campaign - State",
                        "CheckId": "EIDSCA.AG08",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "registrationEnforcement.authenticationMethodsRegistrationCampaign.state",
                        "DefaultValue": "default",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/RegistrationCampaign",
                        "Description": "Configuration of a registration campaign that prompts users to set up more secure authentication methods.",
                        "HowToFix": "[Microsoft Learn - Enable registration campaign](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-mfa-registration-campaign#enable-the-registration-campaign-policy-using-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "authenticationMethodsRegistrationCampaignIncluded",
                        "DisplayName": "Registration campaign - Included users/groups",
                        "CheckId": "EIDSCA.AG09",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "registrationEnforcement.authenticationMethodsRegistrationCampaign.includeTargets.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/RegistrationCampaign",
                        "Description": "Users and groups of users that are prompted to set up the authentication method.",
                        "HowToFix": "[Microsoft Learn - Enable registration campaign](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-mfa-registration-campaign#enable-the-registration-campaign-policy-using-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "authenticationMethodsRegistrationCampaignTargetedAuthenticationMethod",
                        "DisplayName": "Registration campaign - Authentication Method",
                        "CheckId": "EIDSCA.AG10",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "registrationEnforcement.authenticationMethodsRegistrationCampaign.includeTargets.targetedAuthenticationMethod",
                        "DefaultValue": "microsoftAuthenticator",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/RegistrationCampaign",
                        "Description": "Chosen Authentication Method for Registration campaign.",
                        "HowToFix": "[Microsoft Learn - Enable registration campaign](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-mfa-registration-campaign#enable-the-registration-campaign-policy-using-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "authenticationMethodsRegistrationCampaignExcluded",
                        "DisplayName": "Registration campaign - Excluded users/groups",
                        "CheckId": "EIDSCA.AG11",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "registrationEnforcement.authenticationMethodsRegistrationCampaign.excludeTargets.id",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/RegistrationCampaign",
                        "Description": "Users and groups of users that are excluded from being prompted to set up the authentication method.",
                        "HowToFix": "[Microsoft Learn - Enable registration campaign](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-mfa-registration-campaign#enable-the-registration-campaign-policy-using-the-microsoft-entra-admin-center)"
                    },
                    {
                        "Name": "authenticationMethodsRegistrationCampaignSnoozeDurationInDays",
                        "DisplayName": "Registration campaign - Days allowed to snooze",
                        "CheckId": "EIDSCA.AG12",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "registrationEnforcement.authenticationMethodsRegistrationCampaign.snoozeDurationInDays",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Informational",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/RegistrationCampaign",
                        "Description": "Specifies the number of days that the user sees a prompt again if they select 'Not now' and snoozes the prompt. Minimum: 0 days. Maximum: 14 days.",
                        "HowToFix": "[Microsoft Learn - Enable registration campaign](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-mfa-registration-campaign#enable-the-registration-campaign-policy-using-the-microsoft-entra-admin-center)"
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Microsoft Authenticator",
                "ControlId": "EIDSCA.AM",
                "Description": "Define configuration settings and users or groups that are enabled to use Authenticator App",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('MicrosoftAuthenticator')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('MicrosoftAuthenticator')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/microsoftauthenticatorauthenticationmethodconfiguration",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AM01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "enabled",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AdminAuthMethods",
                        "Description": "Whether the Authenticator App is enabled in the tenant.",
                        "HowToFix": "[Microsoft Learn - Enable Authenticator App](https://learn.microsoft.com/en-us/entra/identity/authentication/concept-authentication-methods-manage#authentication-methods-policy)"
                    },
                    {
                        "Name": "isSoftwareOathEnabled",
                        "DisplayName": "Allow use of Microsoft Authenticator OTP",
                        "CheckId": "EIDSCA.AM02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "enabled",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "https://entra.microsoft.com/#view/Microsoft_AAD_IAM/AuthenticationMethodsMenuBlade/~/AdminAuthMethods",
                        "Description": "Defines if users can use the OTP code generated by the Authenticator App.",
                        "HowToFix": "[Microsoft Learn - Enable OTP for Authenticator App](https://learn.microsoft.com/en-us/entra/identity/authentication/concept-authentication-methods-manage#authentication-methods-policy)"
                    },
                    {
                        "Name": "numberMatchingRequiredState",
                        "DisplayName": "Require number matching for push notifications",
                        "CheckId": "EIDSCA.AM03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.numberMatchingRequiredState.state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Defines if number matching is required for MFA notifications.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "numberMatchingRequiredStateIncluded",
                        "DisplayName": "Included users/groups of number matching for push notifications",
                        "CheckId": "EIDSCA.AM04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.numberMatchingRequiredState.includeTarget.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "all_users",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be showing number matching in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "numberMatchingRequiredStateExcluded",
                        "DisplayName": "Excluded users/groups of number matching for push notifications",
                        "CheckId": "EIDSCA.AM05",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.numberMatchingRequiredState.excludeTarget.id",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which be able excluded from showing number matching in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayAppInformationRequiredState",
                        "DisplayName": "Show application name in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM06",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayAppInformationRequiredState.state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Determines whether the user's Authenticator app will show them the client app they are signing into.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayAppInformationRequiredStateIncluded",
                        "DisplayName": "Included users/groups to show application name in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM07",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayAppInformationRequiredState.includeTarget.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "all_users",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be showing app information in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayAppInformationRequiredStateExcluded",
                        "DisplayName": "Excluded users/groups to show application name in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM08",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayAppInformationRequiredState.excludeTarget.id",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded from showing app information in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayLocationInformationRequiredState",
                        "DisplayName": "Show geographic location in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM09",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayLocationInformationRequiredState.state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Determines whether the user's Authenticator app will show them the geographic location of where the authentication request originated from.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayLocationInformationRequiredStateIncluded",
                        "DisplayName": "Included users/groups to show geographic location in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM10",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayLocationInformationRequiredState.includeTarget.id",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "all_users",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be showing geographic location in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "displayLocationInformationRequiredExcluded",
                        "DisplayName": "Excluded users/groups to show geographic location in push and passwordless notifications",
                        "CheckId": "EIDSCA.AM11",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "featureSettings.displayLocationInformationRequiredState.excludeTarget.id",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which are excluded from showing geographic location in the Authenticator App.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from using Authenticator App",
                        "CheckId": "EIDSCA.AM12",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use the Microsoft Authenticator App and Determines which types of notifications can be used for sign-in. Possible values are: any, deviceBasedPush (passwordless only), push.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/groups from using Authenticator App",
                        "CheckId": "EIDSCA.AM13",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'MicrosoftAuthenticator'",
                        "SkipReason": "Authentication method of Microsoft Authenticator is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use the Microsoft Authenticator App.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - FIDO2 security key",
                "ControlId": "EIDSCA.AF",
                "Description": "Define configuration settings and users or groups that are enabled to use FIDO2 security keys",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Fido2')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Fido2')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/fido2authenticationmethodconfiguration",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AF01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "enabled",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the FIDO2 security keys is enabled in the tenant.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Enable FIDO2 security key](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#enable-passkey-authentication-method)"
                    },
                    {
                        "Name": "isSelfServiceRegistrationAllowed",
                        "DisplayName": "Allow self-service set up",
                        "CheckId": "EIDSCA.AF02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2'",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled.",
                        "CurrentValue": "isSelfServiceRegistrationAllowed",
                        "DefaultValue": "true",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Allows users to register a FIDO key through the MySecurityInfo portal, even if enabled by Authentication Methods policy.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Allow self-service set up](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#passkey-optional-settings)"
                    },
                    {
                        "Name": "isAttestationEnforced",
                        "DisplayName": "Enforce attestation",
                        "CheckId": "EIDSCA.AF03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2'",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled.",
                        "CurrentValue": "isAttestationEnforced",
                        "DefaultValue": "true",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Requires the FIDO security key metadata to be published and verified with the FIDO Alliance Metadata Service, and also pass Microsoft's additional set of validation testing.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Enforce attestation](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#passkey-optional-settings)"
                    },
                    {
                        "Name": "keyRestrictions.isEnforced",
                        "DisplayName": "Enforce key restrictions",
                        "CheckId": "EIDSCA.AF04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2'",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled.",
                        "CurrentValue": "keyRestrictions.isEnforced",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "Restrict usage of FIDO2 from unauthorized vendors or platforms",
                        "Severity": "Low",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Manages if registration of FIDO2 keys should be restricted.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Enforce key restrictions](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#passkey-optional-settings)"
                    },
                    {
                        "Name": "keyRestrictions.aaGuids",
                        "DisplayName": "Restricted",
                        "CheckId": "EIDSCA.AF05",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2' -or (Test-MtEidscaAF04) -eq $false",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled and key restriction not enforced.",
                        "CurrentValue": "keyRestrictions.aaGuids -notcontains $null",
                        "DefaultValue": "",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "Low",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "You can work with your Security key provider to determine the AAGuids of their devices for allowing or blocking usage.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Restricted AAGUIDS](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#passkey-optional-settings)"
                    },
                    {
                        "Name": "keyRestrictions.enforcementType",
                        "DisplayName": "Restrict specific keys",
                        "CheckId": "EIDSCA.AF06",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2' -or (Test-MtEidscaAF04) -eq $false",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled and key restriction not enforced.",
                        "CurrentValue": "keyRestrictions.aaGuids -notcontains $null -and ($result.keyRestrictions.enforcementType -eq 'allow' -or $result.keyRestrictions.enforcementType -eq 'block')",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "You should use Block or Allow as value to allow- or blocklisting of AAGuids.",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Defines if list of AADGUID will be used to allow or block registration.",
                        "HowToFix": "[Microsoft Learn - Enable passkeys (FIDO2) for your organization: Restrict specific keys](https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-enable-passkey-fido2#passkey-optional-settings)"
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from using security keys",
                        "CheckId": "EIDSCA.AF07",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2'",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use FIDO2 security keys and determines whether the user is enforced to register the authentication method.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/groups from using security keys",
                        "CheckId": "EIDSCA.AF08",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Fido2'",
                        "SkipReason": "Authentication method of FIDO2 security keys is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use FIDO2 security keys.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Temporary Access Pass",
                "ControlId": "EIDSCA.AT",
                "Description": "Define configuration settings and users or groups that are enabled to use Temporary Access Pass",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('TemporaryAccessPass')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('TemporaryAccessPass')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/temporaryaccesspassauthenticationmethodconfiguration",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AT01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "enabled",
                        "RecommendedValue": "enabled",
                        "Recommendation": "Use Temporary Access Pass for secure onboarding users (initial password replacement) and enforce MFA for registering security information in Conditional Access Policy.",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the Temporary Access Pass is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "isUsableOnce",
                        "DisplayName": "One-time",
                        "CheckId": "EIDSCA.AT02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "isUsableOnce",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "Avoid to allow reusable passes and restrict usage to one-time use (if applicable)",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Determines whether the pass is limited to a one-time use.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "defaultLifetimeInMinutes",
                        "DisplayName": "Default lifetime",
                        "CheckId": "EIDSCA.AT03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "defaultLifetimeInMinutes",
                        "DefaultValue": "60",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Default lifetime in minutes for creating a new Temporary Access Pass.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "defaultLength",
                        "DisplayName": "Length",
                        "CheckId": "EIDSCA.AT04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "defaultLength",
                        "DefaultValue": "8",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Default length in characters of a Temporary Access Pass object. Must be between 8 and 48 characters.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "minimumLifetimeInMinutes",
                        "DisplayName": "Minimum lifetime",
                        "CheckId": "EIDSCA.AT05",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "minimumLifetimeInMinutes",
                        "DefaultValue": "60",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Minimum lifetime in minutes for any Temporary Access Pass created in the tenant. Value can be between 10 and 43200 minutes (equivalent to 30 days).",
                        "HowToFix": ""
                    },
                    {
                        "Name": "maximumLifetimeInMinutes",
                        "DisplayName": "Maximum lifetime",
                        "CheckId": "EIDSCA.AT06",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "maximumLifetimeInMinutes",
                        "DefaultValue": "480",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Maximum lifetime in minutes for any Temporary Access Pass created in the tenant. Value can be between 10 and 43200 minutes (equivalent to 30 days).",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from Temporary Access Pass",
                        "CheckId": "EIDSCA.AT07",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use Temporary Access Pass.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from Temporary Access Pass",
                        "CheckId": "EIDSCA.AT08",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'TemporaryAccessPass'",
                        "SkipReason": "Authentication method of Temporary Access Pass is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use Temporary Access Pass.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Third-party software OATH tokens",
                "ControlId": "EIDSCA.AO",
                "Description": "Define configuration settings and users or groups that are enabled to use software OATH token",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('SoftwareOath')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('SoftwareOath')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/softwareoathauthenticationmethod",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AO01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the Third-party software OATH token is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from OATH token",
                        "CheckId": "EIDSCA.AO02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'SoftwareOath'",
                        "SkipReason": "Authentication method of SoftwareOath is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "Medium",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use OATH token and determines whether the user is enforced to register the authentication method.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from OATH token",
                        "CheckId": "EIDSCA.AO03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'SoftwareOath'",
                        "SkipReason": "Authentication method of SoftwareOath is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use OATH token.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Email OTP",
                "ControlId": "EIDSCA.AE",
                "Description": "Define configuration settings and users or groups that are enabled to use email address registered to a user. For members of a tenant, email OTP is usable only for Self-Service Password Recovery. It may also be configured to be used for sign-in by guest users.",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Email')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Email')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/emailauthenticationmethod",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AE01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether Email OTP is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "allowExternalIdToUseEmailOtp",
                        "DisplayName": "Allow external users to use email OTP",
                        "CheckId": "EIDSCA.AE02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Email'",
                        "SkipReason": "Authentication method of Email is not enabled.",
                        "CurrentValue": "allowExternalIdToUseEmailOtp",
                        "DefaultValue": "default",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Determines whether email one-time password is usable by external users for authentication. Tenants in the default state who did not use public preview will automatically have email OTP enabled beginning in March 2021.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from Email OTP",
                        "CheckId": "EIDSCA.AE03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Email'",
                        "SkipReason": "Authentication method of Email is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use Email OTP.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from Email OTP",
                        "CheckId": "EIDSCA.AE04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Email'",
                        "SkipReason": "Authentication method of Email is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use Email OTP.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Voice call",
                "ControlId": "EIDSCA.AV",
                "Description": "Define configuration settings and users or groups that are enabled to use voice call for authentication. Voice call is not usable as a first-factor authentication method.",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Voice')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Voice')",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AV01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "disabled",
                        "Recommendation": "Choose authentication methods with number matching (Authenticator) ",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the Voice call is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "isOfficePhoneAllowed",
                        "DisplayName": "Phone Options - Office",
                        "CheckId": "EIDSCA.AV02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Voice'",
                        "SkipReason": "Authentication method of Voice (Call) is not enabled.",
                        "CurrentValue": "isOfficePhoneAllowed",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Determines whether voice call is usable on office phone numbers. Mobile phone calls are always allowed.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from Voice call",
                        "CheckId": "EIDSCA.AV03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Voice'",
                        "SkipReason": "Authentication method of Voice (Call) is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "all_users",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use Voice call and determines whether the user is enforced to register the authentication method.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from Voice call",
                        "CheckId": "EIDSCA.AV04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Voice'",
                        "SkipReason": "Authentication method of Voice (Call) is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use Voice call.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - SMS",
                "ControlId": "EIDSCA.AS",
                "Description": "Define configuration settings and users or groups that are enabled to use text messages for authentication.",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Sms')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Sms')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/phoneauthenticationmethod",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AS01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the Voice call is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from Voice call",
                        "CheckId": "EIDSCA.AS02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Sms'",
                        "SkipReason": "Authentication method of Sms is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use Voice call, determines whether the user is enforced to register the authentication method and if users can use this authentication method to sign in to Azure AD. If setting is set to true, users can use this method for primary authentication.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from Voice call",
                        "CheckId": "EIDSCA.AS03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'Sms'",
                        "SkipReason": "Authentication method of Sms is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use Voice call.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Authentication Method - Certificate-based authentication",
                "ControlId": "EIDSCA.AC",
                "Description": "Define configuration settings and users or groups that are enabled to use certificate-based authentication.",
                "Discovery": "",
                "GraphEndpoint": "authenticationMethodsPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('X509Certificate')",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('X509Certificate')",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/certificatebasedauthconfiguration",
                "MitreTactic": [
                    "TA0006 - Credential Access"
                ],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "state",
                        "DisplayName": "State",
                        "CheckId": "EIDSCA.AC01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "state",
                        "DefaultValue": "disabled",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "High",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Whether the CBA is enabled in the tenant.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "includeTargets",
                        "DisplayName": "Included users/groups from CBA",
                        "CheckId": "EIDSCA.AC02",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'X509Certificate'",
                        "SkipReason": "Authentication method of X509Certificate is not enabled.",
                        "CurrentValue": "includeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be able to use CBA and determines whether the user is enforced to register the authentication method.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "excludeTargets",
                        "DisplayName": "Excluded users/group from CBA",
                        "CheckId": "EIDSCA.AC03",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'X509Certificate'",
                        "SkipReason": "Authentication method of X509Certificate is not enabled.",
                        "CurrentValue": "excludeTargets",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Object Id or scope of users which will be excluded to use CBA.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "authenticationModeConfiguration.x509CertificateAuthenticationDefaultMode",
                        "DisplayName": "Authentication binding - Protected Level",
                        "CheckId": "EIDSCA.AC04",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'X509Certificate'",
                        "SkipReason": "Authentication method of X509Certificate is not enabled.",
                        "CurrentValue": "authenticationModeConfiguration.x509CertificateAuthenticationDefaultMode",
                        "DefaultValue": "x509CertificateSingleFactor",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "Medium",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Select the default protection level for all certificate bindings. The default binding will ensure the certificates bind to the selected protection strength setting unless special rules are applied. To override the default, create special rules.",
                        "HowToFix": ""
                    },
                    {
                        "Name": "authenticationModeConfiguration.rules",
                        "DisplayName": "Authentication binding - Rules",
                        "CheckId": "EIDSCA.AC05",
                        "SkipCondition": "$EnabledAuthMethods -notcontains 'X509Certificate'",
                        "SkipReason": "Authentication method of X509Certificate is not enabled.",
                        "CurrentValue": "authenticationModeConfiguration.rules",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "Rules are configured in addition to the authentication mode to bind a specific x509CertificateRuleType to an x509CertificateAuthenticationMode.",
                        "HowToFix": ""
                    }
                ]
            },
            {
                "ControlName": "Consent Framework - Admin Consent Request",
                "ControlId": "EIDSCA.CR",
                "Description": "Represents the policy for enabling or disabling the Azure AD admin consent workflow. The admin consent workflow allows users to request access for apps that they wish to use and that require admin authorization before users can use the apps to access organizational data. ",
                "Discovery": "$EnabledAdminConsentWorkflow = (Invoke-MtGraphRequest -RelativeUri 'policies/adminConsentRequestPolicy' -ApiVersion beta).isenabled",
                "GraphEndpoint": "adminConsentRequestPolicy",
                "GraphUri": "https://graph.microsoft.com/beta/policies/adminConsentRequestPolicy",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/adminConsentRequestPolicy",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/adminconsentrequestpolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "isEnabled",
                        "DisplayName": "Policy to enable or disable admin consent request feature",
                        "CheckId": "EIDSCA.CR01",
                        "SkipCondition": "",
                        "SkipReason": "",
                        "CurrentValue": "isEnabled",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "Defines if admin consent request feature is enabled or disabled",
                        "HowToFix": ""
                    },
                    {
                        "Name": "notifyReviewers",
                        "DisplayName": "Reviewers will receive email notifications for requests",
                        "CheckId": "EIDSCA.CR02",
                        "SkipCondition": "($EnabledAdminConsentWorkflow) -eq $false",
                        "SkipReason": "Admin Consent Workflow is not enabled",
                        "CurrentValue": "notifyReviewers",
                        "DefaultValue": "false",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "Specifies whether reviewers will receive notifications",
                        "HowToFix": ""
                    },
                    {
                        "Name": "notifyReviewers",
                        "DisplayName": "Reviewers will receive email notifications when admin consent requests are about to expire",
                        "CheckId": "EIDSCA.CR03",
                        "SkipCondition": "($EnabledAdminConsentWorkflow) -eq $false",
                        "SkipReason": "Admin Consent Workflow is not enabled",
                        "CurrentValue": "notifyReviewers",
                        "DefaultValue": "",
                        "RecommendedValue": "true",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "Specifies whether reviewers will receive reminder emails",
                        "HowToFix": ""
                    },
                    {
                        "Name": "requestDurationInDays",
                        "DisplayName": "Consent request duration (days)",
                        "CheckId": "EIDSCA.CR04",
                        "SkipCondition": "($EnabledAdminConsentWorkflow) -eq $false",
                        "SkipReason": "Admin Consent Workflow is not enabled",
                        "CurrentValue": "requestDurationInDays",
                        "DefaultValue": "",
                        "RecommendedValue": "30",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "Specifies the duration the request is active before it automatically expires if no decision is applied",
                        "HowToFix": ""
                    },
                    {
                        "Name": "reviewers",
                        "DisplayName": "Reviewers",
                        "CheckId": "EIDSCA.CR05",
                        "SkipCondition": "($EnabledAdminConsentWorkflow) -eq $false",
                        "SkipReason": "Admin Consent Workflow is not enabled",
                        "CurrentValue": "reviewers",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "https://portal.azure.com/#view/Microsoft_AAD_IAM/ConsentPoliciesMenuBlade/~/AdminConsentSettings",
                        "Description": "The list of reviewers for the admin consent",
                        "HowToFix": ""
                    },
                    {
                        "Name": "version",
                        "DisplayName": "Consent request expires after (days)",
                        "CheckId": "EIDSCA.CR06",
                        "SkipCondition": "($EnabledAdminConsentWorkflow) -eq $false",
                        "SkipReason": "Admin Consent Workflow is not enabled",
                        "CurrentValue": "version",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [
                            "TA0001 - Initial Access",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access",
                            "TA0008 - Lateral Movement"
                        ],
                        "MitreTechnique": [
                            "T1078",
                            "T1528",
                            "T1550",
                            "T1550.001",
                            "T1566.002"
                        ],
                        "MitreMitigation": [
                            "M1018",
                            "M1017"
                        ],
                        "PortalDeepLink": "",
                        "Description": "Specifies the version of this policy. When the policy is updated, this version is updated",
                        "HowToFix": ""
                    }
                ]
            }
        ]
    },
    {
        "Category": "Entra Conditional Access",
        "Description": "Insights Conditional Access configuration",
        "CollectedBy": "LogicApp",
        "ExpandValue": "True",
        "TargetTable": "AADSCA_CAP_CL",
        "ControlArea": [
            {
                "ControlName": "Conditional Access Policies",
                "Description": "Conditional Access Policies.",
                "Discovery": "",
                "GraphEndpoint": "conditionalAccessPolicies",
                "GraphUri": "https://graph.microsoft.com/beta/policies/conditionalAccessPolicies",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/policies/conditionalAccessPolicies",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/resources/conditionalaccesspolicy",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "",
                        "DisplayName": "",
                        "CurrentValue": "",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "",
                        "HowToFix": ""
                    }
                ]
            }
        ]
    },
    {
        "Category": "Entra Workload ID",
        "Description": "Insights of created Workload Identities",
        "CollectedBy": "Function",
        "ExpandValue": "True",
        "TargetTable": "AADSCA_WID_CL",
        "ControlArea": [
            {
                "ControlName": "Service Principals",
                "Description": "Existing service principals in the tenant",
                "Discovery": "",
                "GraphEndpoint": "serviceprincipals",
                "GraphUri": "https://graph.microsoft.com/beta/serviceprincipals?$select=id,appid,displayName,appOwnerOrganizationId,servicePrincipalType,signInAudience,AssignmentRequired,disabledByMicrosoftStatus,publisherName,accountEnabled,createdDateTime,keyCredentials,passwordCredentials,federatedIdentityCredentials&expand=appRoleAssignments",
                "GraphGovUsUri": "https://graph.microsoft.us/beta/serviceprincipals?$select=id,appid,displayName,appOwnerOrganizationId,servicePrincipalType,signInAudience,AssignmentRequired,disabledByMicrosoftStatus,publisherName,accountEnabled,createdDateTime,keyCredentials,passwordCredentials,federatedIdentityCredentials&expand=appRoleAssignments",
                "GraphDocsUrl": "https://learn.microsoft.com/en-us/graph/api/serviceprincipal-list?view=graph-rest-1.0&tabs=http",
                "MitreTactic": [],
                "MitreTechnique": [],
                "MitreMitigation": [],
                "Controls": [
                    {
                        "Name": "",
                        "DisplayName": "",
                        "CurrentValue": "",
                        "DefaultValue": "",
                        "RecommendedValue": "",
                        "Recommendation": "",
                        "Severity": "",
                        "MitreTactic": [],
                        "MitreTechnique": [],
                        "MitreMitigation": [],
                        "PortalDeepLink": "",
                        "Description": "",
                        "HowToFix": ""
                    }
                ]
            }
        ]
    }
]